apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared-deployment
  labels:
    tunnel: k8s-tunnel
    app: cloudflared
    app.kubernetes.io/component: server
    app.kubernetes.io/version: latest
spec:
  replicas: 2
  selector:
    matchLabels:
      tunnel: k8s-tunnel
      app.kubernetes.io/name: cloudflared
      app: cloudflared
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudflared
        tunnel: k8s-tunnel
    spec:
      containers:
      - args:
        - tunnel
        # Points cloudflared to the config file, which configures what
        # cloudflared will actually do. This file is created by a ConfigMap
        # below.
        - --config
        - /etc/cloudflared/config/config.yaml
        - run
        image: cloudflare/cloudflared:latest
        name: cloudflared
        livenessProbe:
          httpGet:
          # Cloudflared has a /ready endpoint which returns 200 if and only if
          # it has an active connection to the edge.
            path: /ready
            port: 2000
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /etc/cloudflared/config
          readOnly: true
        - name: creds
          mountPath: /etc/cloudflared/creds
          readOnly: true
      volumes:
      - name: creds
        secret:
          secretName: tunnel-credentials
      - name: config
        configMap:
          name: cloudflared
          items:
          - key: config.yaml
            path: config.yaml
status: {}
